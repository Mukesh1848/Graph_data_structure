#include <bits/stdc++.h> 

void toposort(int node,unordered_map<int,list<int>>&adj,
vector<bool>&visited,stack<int>&s){

    visited[node] =1;

    for(auto neighbour : adj[node]){
        if(!visited[neighbour])
        toposort(neighbour,adj,visited,s);
    }

    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
   
   // prepare ajd list

unordered_map<int,list<int>>adj;

    for(int i=0;i<e;i++){
    int u = edges[i][0];
    int v= edges[i][1];

    adj[u].push_back(v);
    }

    vector<bool>visited(v);
    stack<int>s;

    for(int i=0;i<v;i++){
        if(!visited[i]){
            toposort(i,adj,visited,s);
        }
    }

  vector<int>ans;

  while(!s.empty()){
      int ele = s.top();
      ans.push_back(ele);
      s.pop();
  }
    return ans;
}

